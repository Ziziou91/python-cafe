"""The logic to produce a table of enu items, prices, stock and stock value."""
import math
from data.cafe_data import stock

def calc_stock_value(item_price:float, item_stock:int) -> float:
    """Calculates the total value of stock. If not args then returns default string."""
    if item_price == "Price":
        return "Stock Value"
    else:
        return item_stock * item_price

def create_cell(item:str, cell_width:int) -> str:
    """Creates each cell to populate a table of values generated by create_line."""
    spacing = cell_width - (len(str(item)) / 2)
    if spacing.is_integer():
        return f"{' '*int(spacing)}{item}{' '*int(spacing)}"
    else:
        return f"{' '*int(math.ceil(spacing))}{item}{' '*int(math.floor(spacing))}"

def create_line(item:str="Item", price:float="Price", stock:int="Stock") -> str:
    """Creates each line in a table of menu items, prices, stock and stock value."""
    item_cell = create_cell(item, 8)
    price_cell = create_cell(price, 8)
    stock_cell = create_cell(stock, 8)
    stock_value = create_cell(calc_stock_value(price, stock), 8)
    return f"|{item_cell}|{price_cell}|{stock_cell}|{stock_value}|"

def draw_title(title_str:str) -> str:
    """draws a box to confirm if the user is using the app as either 'owner' or 'customer'"""
    #create dictionary with key/value pairs for for each possible title
    titles= {
        "owner" : f"{' '*9}Owner{' '*8}",
        "customer" : f"{' '*7}Customer{' '*7}",
        "stock" : f"{' '*9}Stock{' '*8}",
    }
    return f"{'-'*24}\n|{' '*22}|\n|{titles[title_str]}|\n|{' '*22}|\n{'-'*24}"

def draw_stock():
    """Prints the total current stock for the cafe to the terminal."""
    print("Here's the current stock:\n")
    print(f"{'-'*69}")
    print(create_line())
    print(f"{'-'*69}")
    for item, item_props in stock.items():
        print(create_line(item, item_props["price"], item_props["stock"]))
        print(f"{'-'*69}")

def draw_item(menu_item):
    """Prints the chosen menu item to amend, called in amend_item."""
    print(f"\n{'-'*69}")
    print(create_line())
    print(f"{'-'*69}")
    print(create_line(menu_item[0], menu_item[1]["price"], menu_item[1]["stock"]))
    print(f"{'-'*69}\n")